#!/bin/bash
#########################################################################
# File Name: isphone.sh
# Author:陈俊杰
# mail: 2716705056@qq.com
# Created Time: 2021年07月19日 星期一 08时36分55秒

# 此程序的功能是：
# 前面的例子演示了在处理数据时，如何将简单的正则表达式和 sed 配合使用来替换数据流中
# 的字符。正则表达式通常用于验证数据，确保脚本中数据格式的正确性。
# 一个常见的数据验证应用就是检查电话号码。数据输入表单通常会要求填入电话号码，而用
# 户输入格式错误的电话号码是常有的事。在美国，电话号码有几种常见的形式：
# (123)456-7890
# (123) 456-7890
# 123-456-7890
# 123.456.7890
# 这样用户在表单中输入的电话号码就有4种可能。正则表达式必须足够强大，才能处理每一
# 种情况。
# 在构建正则表达式时，最好从左手边开始，然后构建用来匹配可能遇到的字符的模式。在这
# 个例子中，电话号码中可能有也可能没有左圆括号。这可以用如下模式来匹配：
# ^\(?
# 脱字符用来表明数据的开始。由于左圆括号是个特殊字符，因此必须将它转义成普通字符。
# 问号表明左圆括号可能出现，也可能不出现。
# 紧接着就是3位区号。在美国，区号以数字2开始（没有以数字0或1开始的区号），最大可到9。
# 要匹配区号，可以用如下模式。
# [2-9][0-9]{2}
# 这要求第一个字符是2~9的数字，后跟任意两位数字。在区号后面，收尾的右圆括号可能存
# 在，也可能不存在。
# \)?
# 在区号后，存在如下可能：有一个空格，没有空格，有一条单破折线或一个点。你可以对它
# 们使用管道符号，并用圆括号进行分组。
# (| |-|\.)
# 第一个管道符号紧跟在左圆括号后，用来匹配没有空格的情形。你必须将点字符转义，否则
# 它会被解释成可匹配任意字符。
# 紧接着是3位电话交换机号码。这里没什么需要特别注意的。
# [0-9]{3}
# 在电话交换机号码之后，你必须匹配一个空格、一条单破折线或一个点（这次不用考虑匹配
# 没有空格的情况，因为在电话交换机号码和其余号码间必须有至少一个空格）。
# ( |-|\. )
# 最后，必须在字符串尾部匹配4位本地电话分机号。
# [0-9]{4}$
# 完整的模式如下。
# ^\(?[2-9][0-9]{2}\)?(| |-|\.)[0-9]{3}( |-|\. )[0-9]{4}$
# 你可以在gawk程序中用这个正则表达式模式来过滤掉不符合格式的电话号码。现在你只需要
# 在gawk程序中创建一个使用该正则表达式的简单脚本，然后用这个脚本来过滤你的电话薄。记住，
# 在gawk程序中使用正则表达式间隔时，必须使用 --re-interval 命令行选项，否则就没法得到
# 正确的结果。
# 脚本如下。
#########################################################################


# script to filter out bad phone numbers
gawk --re-interval '/^\(?[2-9][0-9]{2}\)?(| |-|\.[0-9]{3}( |-|\. )[0-9]{4}/{print $0}'')'
